{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"apiFetch\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["lodash","assign","__","wp","i18n","Fragment","element","addFilter","hooks","components","TextControl","PanelBody","SelectControl","createHigherOrderComponent","compose","InspectorControls","blockEditor","wpDxpRuleOptions","push","value","label","apiFetch","path","then","response","data","forEach","rule","id","name","disabled","is_usable","catch","err","console","log","wpDxpActionOptions","addWpDxpBlockControls","BlockEdit","props","attributes","setAttributes","isSelected","visibleOnMobile","wpDxpRule","wpDxpAction","isValidBlockType","validBlockTypes","includes","addAttribute","settings","type","default","addSaveProps","extraProps","blockType"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * External Dependencies\n */\n//import classnames from 'classnames';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst { assign } = lodash;\nconst { __ } = wp.i18n;\nconst { Fragment } = wp.element;\nconst { addFilter } = wp.hooks;\nconst { TextControl, PanelBody, SelectControl } = wp.components;\nconst { createHigherOrderComponent } = wp.compose;\nconst { InspectorControls } = wp.blockEditor;\n\n\n\nlet wpDxpRuleOptions = [];\nwpDxpRuleOptions.push({ value: null, label: '-- No rule selected --' });\n\napiFetch({ path: '/wp-dxp/v1/rules' }).then( response => {\n\tresponse.data.forEach(function (rule) {\n\t  \twpDxpRuleOptions.push({ value: rule.id, label: rule.name, disabled: !rule.is_usable });\n\t});\n}).catch( err => {\n    console.log(err);\n});\n\nlet wpDxpActionOptions = [];\nwpDxpActionOptions.push({ value: 'show', label: 'Show Block', disabled: false });\nwpDxpActionOptions.push({ value: 'hide', label: 'Hide Block' });\n\n\n\n// See richardtape.com/?p=348\n\n/**\n * Override the default edit UI to include a new block inspector control for\n * adding our custom control.\n *\n * @param {function|Component} BlockEdit Original component.\n *\n * @return {string} Wrapped component.\n */\nexport const addWpDxpBlockControls = createHigherOrderComponent( ( BlockEdit ) => {\n\n    return ( props ) => {\n\n\t\tconst {\n\t\t\tname,\n\t\t\tattributes,\n\t\t\tsetAttributes,\n\t\t\tisSelected,\n\t\t} = props;\n\n\t\tconst {\n\t\t\tvisibleOnMobile,\n\t\t\twpDxpRule,\n\t\t\twpDxpAction,\n\t\t} = attributes;\n\n\t\tif ('core/freeform' == props.name) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n        // If this block supports scheduling and is currently selected, add our UI\n        if ( isValidBlockType( props.name ) && props.isSelected ) {\n            return (\n                <Fragment>\n                    <BlockEdit { ...props } />\n                    <InspectorControls>\n                        <PanelBody title={ __( 'WP-DXP' ) }>\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t        label={ __( 'When this rule is met:' ) }\n\t\t\t\t\t\t        name={ 'wpDxpRule' }\n\t\t\t\t\t\t        value={ wpDxpRule } // e.g: value = [ 'a', 'c' ]\n\t\t\t\t\t\t        onChange={ (wpDxpRule) => setAttributes( {  wpDxpRule: wpDxpRule } ) }\n\t\t\t\t\t\t        options={ wpDxpRuleOptions }\n\t\t\t\t\t\t    />\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t        label={ __( 'Then take the following action:' ) }\n\t\t\t\t\t\t        name={ 'wpDxpAction' }\n\t\t\t\t\t\t        value={ wpDxpAction } // e.g: value = [ 'a', 'c' ]\n\t\t\t\t\t\t        onChange={ (wpDxpAction) => setAttributes( {  wpDxpAction: wpDxpAction } ) }\n\t\t\t\t\t\t        options={ wpDxpActionOptions }\n\t\t\t\t\t\t    />\n                        </PanelBody>\n                    </InspectorControls>\n                </Fragment>\n            );\n        }\n\n        return <BlockEdit { ...props } />;\n    };\n}, 'addWpDxpBlockControls' );\n\naddFilter( 'editor.BlockEdit', 'wp-dxp/controls', addWpDxpBlockControls );\n\n// See richardtape.com/?p=348\n\n/**\n * Is the passed block name one which supports our custom field?\n *\n * @param {string} name The name of the block.\n */\nfunction isValidBlockType( name ) {\n\n\treturn true;\n\n    const validBlockTypes = [\n\t\tnull,\n\t\t'core/freeform',\n\t\t'core/heading',\n\t\t'core/html',\n\t\t'core/list',\n\t\t'core/media-text',\n\t\t'core/paragraph',\n\t\t'core/preformatted',\n\t\t'core/pullquote',\n\t\t'core/quote',\n\t\t'core/table',\n\t\t'core/verse',\n    ];\n\n    return validBlockTypes.includes( name );\n\n}// end isValidBlockType()\n\n// See https://richardtape.com/?p=348\n\n/**\n * Filters registered block settings, extending attributes with our custom data.\n *\n * @param {Object} settings Original block settings.\n *\n * @return {Object} Filtered block settings.\n */\nexport function addAttribute( settings ) {\n\n\t// If this is a valid block\n\tif ( isValidBlockType( settings.name ) ) {\n\n\t\t// Use Lodash's assign to gracefully handle if attributes are undefined\n\t\tsettings.attributes = assign( settings.attributes, {\n\t\t\twpDxpRule:{\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: null,\n\t\t\t},\n\t\t\twpDxpAction:{\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: null,\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn settings;\n\n}// end addAttribute()\n\n/**\n * Override props assigned to save component to inject our custom data.\n * This is only done if the component is a valid block type.\n *\n * @param {Object} extraProps Additional props applied to save element.\n * @param {Object} blockType  Block type.\n * @param {Object} attributes Current block attributes.\n *\n * @return {Object} Filtered props applied to save element.\n */\nexport function addSaveProps( extraProps, blockType, attributes ) {\n\n\t// If the current block is valid, add our prop.\n\tif ( isValidBlockType( blockType.name ) ) {\n\t\textraProps.wpDxpRule = attributes.wpDxpRule;\n\t\textraProps.wpDxpAction = attributes.wpDxpAction;\n\t}\n\n\treturn extraProps;\n\n}// end addSaveProps()\n\naddFilter( 'blocks.registerBlockType', 'wp-dxp/add-attr', addAttribute );\n//addFilter( 'blocks.getSaveContent.extraProps', 'wp-dxp/add-props', addSaveProps );","(function() { module.exports = this[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}